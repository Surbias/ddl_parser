# specifies the where the log file for the DDL statements will be created
alterTableLogFileDirectory=log

# Specifies whether DDL statements will be modified (true) or just logged and passed through
# unchanged (false)
applyModifiedStatements=true

# Specifies whether all DDL statements will be suppressed (true) or transformed and applied
# Set this value to true if no DDL statement must be executed on the target side
suppressAllStatements=false

# Tables for which DDLs must be suppressed. Specify fully qualified table name, for example CDCDEMOA.CUSTOMER.
# Multiple tables can be specified, separated by a semicolon (;). Example: CDCDEMOA.CUSTOMER;CDCDEMOA.PRODUCT
suppressTables=

# Specifies whether VARCHAR2(nn) will be replaced by VARCHAR2(nn CHAR)
replaceVarchar2=true

# Specifies the CDC user on the target database; this is the user that owns the CDC metadata
# and stored procedures called by the user exit
cdcDBUser=ISCDCORA

# Indicates the level of tracing that will be output to the CDC instance logs which can be found
# under <cdc_home>/instances/<instance>/log
debug=true

################## REGEX PATTERNS ##################################
##### CREATE TABLE#####
createTable="\\s*create\\s+table

# CREATE TABLE ... FOREIGN KEY ... (ON DELETE (CASCADE|SET NULL))?
createTableConstraintFK=,(\\s+constraint\\s+\"?(\\w+)\"?)?\\s+foreign\\s+key\\s+(\\(\"?\\w+\"?(,\\s*\"?\\w+\"?)*\\))\\s+references\\s+(\"?(\\w+)\"?)?\\.?(\"?(\\w+)\"?)\\s+(\\(\"?\\w+\"?(,\\s*\"?\\w+\"?)*\\))(\\s+on\\s+delete\\s+(cascade|set\\s+null))?(\\s+deferrable)?(\\s+(enable|disable))?.*?(\\s+(validate|novalidate))?

# CREATE TABLE ... CHECK
createTableConstraintCheck=,(\\s+constraint\\s+\"?(\\w+)\"?)?\\s+check\\s+\\(.*?(enable|disable).*?(\\s+(validate|novalidate))?
createTableConstraintCheckNoEnable=,(\\s+constraint\\s+\"?(\\w+)\"?)?\\s+check\\s+\\(

# Detect primary key constraint using index in CREATE TABLE statement
createTableConstraintPKUsingIndex=,(\\s+constraint\\s+\"?(\\w+)\"?)?\\s+primary\\s+key.*?using\\s+index

# SUPPLEMENTAL LOG clauses part of the CREATE TABLE statements
# CREATE TABLE ... SUPPLEMENTAL LOG ... (ALWAYS|COLUMNS)
createTableSupplementalLog=,(\\s+supplemental\\s+log).*?(\\s+(always|columns))

# TABLESPACE("_$deleted$...") clauses part of the CREATE TABLE statements
createTableDeletedTablespace=// TABLESPACE("_$deleted$...") clauses part of the CREATE TABLE statements

##### Type #####
# Columns with type VARCHAR2(nn) to be replaced by VARCHAR2(nn CHAR) type
varchar2Type=(\"?\\w+\"?\\s+varchar2\\(\\s?)(\\d+)(\\s?\\))

##### ALTER TABLE#####
# ALTER TABLE ... ADD ... CONSTRAINT ... FOREIGN KEY
alterTableAddConstraintFK=alter\\s+table\\s.*add(\\s+constraint\\s+\"?(\\w+)\"?)?\\s+foreign\\s+key

# ALTER TABLE ... ADD ... CONSTRAINT ... CHECK
alterTableAddConstraintCheck=alter\\s+table\\s.*add(\\s+constraint\\s+\"?(\\w+)\"?)?\\s+check

# ALTER TABLE ... SHRINK SPACE ...
alterTableShrinkSpace=alter\\s+table\\s.*shrink\\s+space

##### DROP TABLE #####
# This statement must only be executed if the table in question exists
dropTable=drop\\s+(table)\\s+(\"?(\\w+)\"?\\.)?\"?(\\w+)\"?

##### INDEX #####
# CREATE INDEX
createIndex=create\\s+index

# CREATE BITMAP INDEX
createBitmapIndex=create\\s+unique\\s+index

# CREATE UNIQUE INDEX
createUniqueIndex=create\\s+bitmap\\s+index

# ALTER INDEX
# This statement must only be executed if the index in question exists
alterIndex=alter\\s+(index)\\s+(\"?(\\w+)\"?\\.)?\"?(\\w+)\"?

# ALTER INDEX ... SHRINK SPACE ...
alterIndexShrinkSpace=alter\\s+index\\s+.*shrink\\s+space

# DROP INDEX
# This statement must only be executed if the index in question exists
dropIndex=drop\\s+(index)\\s+(\"?(\\w+)\"?\\.)?\"?(\\w+)\"?

# GRANT ... ON ... TO
grantOnTo=grant.*on.*to
